/******************************************************************************
 *
 * Copyright:
 *    (C) 2006 Rob Jansen
 *
 * File:
 *    pieces.h
 *
 * Description:
 *    This file is part of the chess program,
 *    it contains the definition of the encoded chess pieces.
 *
 *    Currently each byte represents a pixel of a chess piece for both colors.
 *    Each byte is encoded as 5 x whitePixel + blackPixel
 *
 *    Pixel values are 0..4 with the following encoding:
 *
 *       0 = .  background (empty pixel)
 *       1 = x  light gray(120,144,144 or 4 5 2)
 *       2 = X  dark gray (0, 48, 48 or 0, 2, 1)
 *       3 = O  white (255, 255, 255 or 7, 7, 3)
 *       4 = +  lighter gray (192, 208, 208 or 6, 7, 2)
 *
 *       The color values are specified in RGB888 as designed and RGB332
 *       for the 8 bits per pixel Color LCD using the default lookup tables.
 *
 * ToDo:
 *    Recode all values into 32 bit numbers.
 *    Currently each piece uses 12 x 12 = 144 bytes Flash storage, recoding
 *    into 32 bits numbers packs 6 pixels into one 32 bits word using only
 *    12 * 2 = 24 bytes.
 *    This reduces the total Flash storage needed from 864 to 144 bytes
 *****************************************************************************/

const tU8 Pawn[] = {

	 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	 0,  0,  0,  0,  0, 12, 12,  0,  0,  0,  0,  0,
	 0,  0,  0,  0, 12, 17, 17, 12,  0,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0,  0, 12,  6,  6, 12,  0,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  6, 12,  6,  6,  6,  6, 12,  6,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0, 12, 12, 12, 12, 12, 12, 12, 12,  0,  0,
	 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
};

const tU8 Rook[] = {

	 0, 12,  1,  7, 12,  1,  1, 12,  7,  1, 12,  0,
	 0, 12,  6,  7, 17,  6,  6, 17,  7,  6, 12,  0,
	 0, 12, 17, 17, 17, 17, 17, 17, 17, 17, 12,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0,  0, 12, 12, 12, 12, 12, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 11, 11, 11, 11, 12,  0,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0, 12, 17, 17, 17, 17, 17, 17, 17, 17, 12,  0,
	 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  0,
};

const tU8 Knight[] = {

	 0,  0,  0, 12,  6,  0, 12,  0,  0,  0,  0,  0,
	 0,  0,  0,  6, 12, 12,  6,  6,  0,  0,  0,  0,
	 0,  0, 12, 12, 17, 17, 12, 12, 12,  0,  0,  0,
	 0, 12, 17, 17, 13,  6, 17, 17, 17, 12,  0,  0,
	 0, 12, 17, 17, 17, 17, 17, 17, 17, 12,  6,  0,
	12, 17, 17, 17, 17, 12, 17, 17, 17,  6, 12,  0,
	12,  6, 17, 12, 11, 12, 17, 17, 17, 17, 12,  0,
	 0, 12, 12,  6, 12, 17, 17, 17, 17, 17, 12,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,
	 0,  0,  0, 12, 11, 11, 11, 11, 11, 11, 12,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 17,  6, 12,
	 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
};

const tU8 Bishop[] = {

	 0,  0,  0,  0,  0, 12, 12,  0,  0,  0,  0,  0,
	 0,  0,  0,  0, 12, 17, 17, 12,  0,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0, 12, 17,  6, 17, 17, 17, 17, 12,  0,  0,
	 0,  0, 12,  6,  6,  6, 17, 17, 17, 12,  0,  0,
	 0,  0, 12, 17, 17,  6,  6, 17, 17, 12,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0,  0, 12, 17, 17, 17, 17, 12,  0,  0,  0,
	 0,  0,  0, 12,  6,  6,  6,  6, 12,  0,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  0,
};

const tU8 Queen[] = {

	 0,  0, 12,  0, 12, 24, 24, 12,  0, 12,  0,  0,
	 0,  0, 12, 12, 24, 12,  6, 24, 12, 12,  0,  0,
	12, 24,  6, 12,  6,  6, 12,  6, 12,  6, 24, 12,
	12, 12, 24, 12, 24, 12, 12,  6, 12, 24, 12, 12,
	 0, 12,  6, 12,  6, 24, 24,  6, 12,  6, 12,  0,
	 0, 12,  6,  6, 17, 17, 17, 17,  6,  6, 12,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0,  0, 12, 17,  6,  6, 17, 12,  0,  0,  0,
	 0,  0,  0, 12,  6, 17, 17,  6, 12,  0,  0,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  0,
};

const tU8 King[] = {

	 0,  0,  0,  0,  0, 12, 12,  0,  0,  0,  0,  0,
	 0,  0,  0,  0,  0,  6, 12,  0,  0,  0,  0,  0,
	 0,  0, 12, 12,  0, 12,  6,  0, 12, 12,  0,  0,
	 0, 12, 17,  6, 12, 12, 12, 12,  6, 17, 12,  0,
	12, 17, 17, 17,  6, 17, 17,  6, 17, 17, 17, 12,
	12, 17, 17, 17,  6, 17, 17,  6, 17, 17, 17, 12,
	12, 17, 17, 17,  6, 17, 17,  6, 17, 17, 17, 12,
	 0, 12, 17, 17, 17,  6,  6, 17, 17, 17, 12,  0,
	 0,  0, 12, 17, 17, 17, 17, 17, 17, 12,  0,  0,
	 0,  0, 12,  6,  6,  6,  6,  6,  6, 12,  0,  0,
	 0, 12, 17, 17, 17, 17, 17, 17, 17, 17, 12,  0,
	 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,  0,
};

